# Generated by Django 4.0.4 on 2022-05-20 09:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Belt',
            fields=[
                ('belt_id', models.AutoField(db_column='id_пояса', primary_key=True, serialize=False, verbose_name='id_пояса')),
                ('name', models.CharField(db_column='Наименование', max_length=20, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Пояс',
                'verbose_name_plural': 'Пояса',
                'db_table': 'Пояс',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('client_id', models.AutoField(db_column='id_клиента', primary_key=True, serialize=False, verbose_name='id_клиента')),
                ('surname', models.CharField(db_column='Фамилия', max_length=30, verbose_name='Фамилия')),
                ('firstname', models.CharField(db_column='Имя', max_length=30, verbose_name='Имя')),
                ('patronymic', models.CharField(db_column='Отчество', max_length=30, verbose_name='Отчество')),
                ('date_birth', models.DateField(db_column='Дата_рождения', verbose_name='Дата_рождения')),
                ('phone_number', models.CharField(db_column='Телефон', max_length=20, verbose_name='Телефон')),
                ('date_enrollment', models.DateField(db_column='Дата_зачисления', verbose_name='Дата_зачисления')),
                ('growth', models.CharField(db_column='Рост', max_length=10, verbose_name='Рост')),
                ('weight', models.CharField(db_column='Вес', max_length=10, verbose_name='Вес')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'db_table': 'Клиент',
            },
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('coach_id', models.AutoField(db_column='id_тренера', primary_key=True, serialize=False, verbose_name='id_тренера')),
                ('surname', models.CharField(db_column='Фамилия', max_length=30, verbose_name='Фамилия')),
                ('firstname', models.CharField(db_column='Имя', max_length=30, verbose_name='Имя')),
                ('patronymic', models.CharField(db_column='Отчество', max_length=30, verbose_name='Отчество')),
                ('phone_number', models.CharField(db_column='Телефон', max_length=30, verbose_name='Телефон')),
                ('date_birth', models.DateField(db_column='Дата_рождения', verbose_name='Дата_рождения')),
                ('date_enrollment', models.DateField(db_column='Дата_зачисления', verbose_name='Дата_зачисления')),
            ],
            options={
                'verbose_name': 'Тренер',
                'verbose_name_plural': 'Тренеры',
                'db_table': 'Тренер',
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('competition_id', models.AutoField(db_column='id_мероприятия', primary_key=True, serialize=False, verbose_name='id_мероприятия')),
                ('certification_competition', models.BooleanField(db_column='Аттестация_соревнования', verbose_name='Аттестация_соревнования')),
                ('date', models.DateField(db_column='Дата', verbose_name='Дата')),
                ('time', models.TimeField(db_column='Время', verbose_name='Время')),
                ('place', models.CharField(db_column='Место_проведения', max_length=50, verbose_name='Место_проведения')),
                ('cost', models.CharField(db_column='Стоимость', max_length=20, verbose_name='Стоимость')),
                ('coach_id', models.ForeignKey(db_column='id_тренера', on_delete=django.db.models.deletion.CASCADE, to='diplom.coach', verbose_name='id_тренера')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
                'db_table': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('document_id', models.AutoField(db_column='id_документа', primary_key=True, serialize=False, verbose_name='id_документа')),
                ('name', models.CharField(db_column='Наименование', max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
                'db_table': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('entry_id', models.AutoField(db_column='id_записи', primary_key=True, serialize=False, verbose_name='id_записи')),
            ],
            options={
                'verbose_name': 'Запись',
                'verbose_name_plural': 'Записи',
                'db_table': 'Запись',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('group_id', models.AutoField(db_column='id_группы', primary_key=True, serialize=False, verbose_name='id_группы')),
                ('data_formation', models.DateField(db_column='Дата_формирования', verbose_name='Дата_формирования')),
                ('description', models.TextField(db_column='Описание_групы', verbose_name='Описание_группы')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'db_table': 'Группа',
            },
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('hall_id', models.AutoField(db_column='id_зала', primary_key=True, serialize=False, verbose_name='id_зала')),
                ('name', models.CharField(db_column='Наименование', max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Зал',
                'verbose_name_plural': 'Залы',
                'db_table': 'Зал',
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('rank_id', models.AutoField(db_column='id_разряда', primary_key=True, serialize=False, verbose_name='id_разряда')),
                ('name', models.CharField(db_column='Наименование', max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Разряд',
                'verbose_name_plural': 'Разряды',
                'db_table': 'Разряд',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('rating_id', models.AutoField(db_column='id_рейтинга', primary_key=True, serialize=False, verbose_name='id_рейтинга')),
                ('name', models.CharField(db_column='Наименование', max_length=50, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Рейтинг',
                'verbose_name_plural': 'Рейтинги',
                'db_table': 'Рейтинг',
            },
        ),
        migrations.CreateModel(
            name='TypeStatement',
            fields=[
                ('type_statement_id', models.AutoField(db_column='id_тип_заявление', primary_key=True, serialize=False, verbose_name='id_тип_заявление')),
                ('name', models.CharField(db_column='Наименование', max_length=30, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип заявления',
                'verbose_name_plural': 'Типы заявления',
                'db_table': 'Тип_заявления',
            },
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('statement_id', models.AutoField(db_column='id_заявление', primary_key=True, serialize=False, verbose_name='id_заявление')),
                ('data_statement', models.DateField(db_column='Дата_заявления', verbose_name='Дата_заявления')),
                ('contract_number', models.CharField(db_column='Номер_договора', max_length=20, verbose_name='Номер_договора')),
                ('data_start_contract', models.DateField(db_column='Дата_начала_договора', verbose_name='Дата_начала_договора')),
                ('data_stop_contract', models.DateField(db_column='Дата_окончания_договора', verbose_name='Дата_окончания_договора')),
                ('payment_status', models.BooleanField(db_column='Состояние_оплаты', default=False, verbose_name='Состояние_оплаты')),
                ('passport_series', models.CharField(db_column='Серия_паспорта', max_length=20, verbose_name='Серия_паспорта')),
                ('passport_number', models.CharField(db_column='Номер_паспорта', max_length=20, verbose_name='Номер_паспорта')),
                ('client', models.ForeignKey(db_column='id_клиента(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.client', verbose_name='id_клиента(FK)')),
                ('type_statement', models.ForeignKey(db_column='id_тип_заявления(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.typestatement', verbose_name='id_тип_заявления(FK)')),
            ],
            options={
                'verbose_name': 'Заявление',
                'verbose_name_plural': 'Заявления',
                'db_table': 'Заявления',
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('speaker_id', models.AutoField(db_column='id_выступающего', primary_key=True, serialize=False, verbose_name='id_выступающего')),
                ('competition_id', models.ForeignKey(db_column='id_мероприятия(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.competition', verbose_name='id_мероприятия(FK)')),
                ('entry', models.ForeignKey(db_column='id_записи(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.entry', verbose_name='id_записи(FK)')),
            ],
            options={
                'verbose_name': 'Выступающий',
                'verbose_name_plural': 'Выступающие',
                'db_table': 'Выступающий',
            },
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('practice_id', models.AutoField(db_column='id_тренеровки', primary_key=True, serialize=False, verbose_name='id_тренеровки')),
                ('date', models.DateField(db_column='Дата', verbose_name='Дата')),
                ('time', models.TimeField(db_column='Время', verbose_name='Время')),
                ('cost', models.CharField(db_column='Стоимость', max_length=20, verbose_name='Стоимость')),
                ('coach', models.ForeignKey(db_column='id_тренера(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.coach', verbose_name='id_тренера(FK)')),
                ('hall', models.ForeignKey(db_column='id_зала(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.hall', verbose_name='id_зала(FK)')),
            ],
            options={
                'verbose_name': 'Тренировка',
                'verbose_name_plural': 'Тренировки',
                'db_table': 'Тренировки',
            },
        ),
        migrations.CreateModel(
            name='PackageDocuments',
            fields=[
                ('package_document_id', models.AutoField(db_column='id_пакет_документов', primary_key=True, serialize=False, verbose_name='id_пакет_документов')),
                ('document', models.ForeignKey(db_column='id_документа(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.document', verbose_name='id_документа(FK)')),
                ('statement', models.ForeignKey(db_column='id_заявления(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.statement', verbose_name='id_заявления(FK)')),
            ],
            options={
                'verbose_name': 'Пакет документов',
                'verbose_name_plural': 'Пакеты документов',
                'db_table': 'Пакет_документов',
            },
        ),
        migrations.AddField(
            model_name='entry',
            name='group',
            field=models.ForeignKey(db_column='Группа', on_delete=django.db.models.deletion.CASCADE, to='diplom.group', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='entry',
            name='statement',
            field=models.ForeignKey(db_column='Заявление', on_delete=django.db.models.deletion.CASCADE, to='diplom.statement', verbose_name='Заявление'),
        ),
        migrations.AddField(
            model_name='competition',
            name='rating_id',
            field=models.ForeignKey(db_column='id_рейтинга', on_delete=django.db.models.deletion.CASCADE, to='diplom.rating', verbose_name='id_рейтинга'),
        ),
        migrations.CreateModel(
            name='Coaching',
            fields=[
                ('coaching_id', models.AutoField(db_column='id_тренерующегося', primary_key=True, serialize=False, verbose_name='id_тренерующегося')),
                ('entry_id', models.ForeignKey(db_column='id_записи(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.entry', verbose_name='id_записи(FK)')),
                ('practice_id', models.ForeignKey(db_column='id_тренировки(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.practice', verbose_name='id_тренировки(FK)')),
            ],
            options={
                'verbose_name': 'Тренирующий',
                'verbose_name_plural': 'Тренирующие',
                'db_table': 'Тренирующийся',
            },
        ),
        migrations.CreateModel(
            name='Achievements',
            fields=[
                ('achievements_id', models.AutoField(db_column='id_достижения', primary_key=True, serialize=False, verbose_name='id_достижения')),
                ('date_assignment', models.DateField(db_column='Дата_присвоения', verbose_name='Дата_присвоения')),
                ('passport_number', models.CharField(db_column='Номер_паспорта_спортсмена', max_length=20, verbose_name='Номер_паспорта_спортсмена')),
                ('belt', models.ForeignKey(db_column='id_пояса(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.belt', verbose_name='id_пояса(FK)')),
                ('client', models.ForeignKey(db_column='id_клиента(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.client', verbose_name='id_клиента(FK)')),
                ('competition', models.ForeignKey(db_column='id_мероприятия(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.competition', verbose_name='id_мероприятия(FK)')),
                ('rank', models.ForeignKey(db_column='id_разряда(FK)', on_delete=django.db.models.deletion.CASCADE, to='diplom.rank', verbose_name='id_разряда(FK)')),
            ],
            options={
                'verbose_name': 'Достижение',
                'verbose_name_plural': 'Достижения',
                'db_table': 'Достижения',
            },
        ),
    ]
